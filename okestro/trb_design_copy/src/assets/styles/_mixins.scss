/* font */
$font-sizes: (    
    sm: 14px,
    base: 16px,
    md: 18px,
    lg: 20px,
    xl: 24px,
    xxl: 28px,
    title: 32px
);
$font-weights: (
    light: 300,
    regular: 400,
    medium: 500,
    semibold: 600,
    bold: 700
);

// 기본 폰트 mixin
@mixin font-size($size: base, $weight: regular, $line-height: 1.5) {
    // 미리 정의된 사이즈 확인
    $font-size: map-get($font-sizes, $size);
    
    // 사이즈가 맵에 없는 경우 직접 입력된 값 사용
    @if not $font-size {
        $font-size: $size;
    }
    
    // 폰트 웨이트 가져오기
    $weight-value: map-get($font-weights, $weight);
    @if not $weight-value {
        $weight-value: $weight;
    }
    
    font-size: $font-size;
    font-weight: $weight-value;
    // line-height: $line-height * $font-size;
}

// 반응형 폰트 사이즈 mixin
// @mixin responsive-font($min-size: 14px, $max-size: 18px, $min-screen: 320px, $max-screen: 1200px) {
//     font-size: clamp($min-size, calc(#{$min-size} + #{strip-unit($max-size - $min-size)} * ((100vw - #{$min-screen}) / #{strip-unit($max-screen - $min-screen)})), $max-size);
// }

// 텍스트 스타일 mixin (자주 사용하는 조합)
@mixin text-style($variant: 'body') {
    @if $variant == 'heading-lg' {
        @include font-size(xxl, bold, 1.3);
        letter-spacing: -0.5px;
    } @else if $variant == 'heading' {
        @include font-size(xl, bold, 1.3);
        letter-spacing: -0.5px;
    } @else if $variant == 'subtitle' {
        @include font-size(lg, medium, 1.4);
    } @else if $variant == 'body' {
        @include font-size(base, regular, 1.5);
    } @else if $variant == 'caption' {
        @include font-size(sm, regular, 1.4);
        color: #666;
    }
}

@mixin size($width, $height){
    width:$width;
    height:$height;
}
@mixin flex-center($justify){
    display:flex;
    align-items: center;
    justify-content: $justify;
}
@mixin absolute($top: auto, $right: auto, $bottom: auto, $left: auto) { 
    position: absolute; 
    top: $top;
    right: $right; 
    bottom: $bottom; 
    left: $left;
}
@mixin ellipsis {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}
/* border */
$border-directions: (
    all: null,
    top: top,
    right: right,
    bottom: bottom,
    left: left,
    x: (right, left),
    y: (top, bottom)
);
@mixin border($direction: all, $color: default, $width: 1px, $style: solid) {
    $sides: map-get($border-directions, $direction);
    @if $direction == all {
        border: $width $style $color;
    } @else if type-of($sides) == list {// x 또는 y 축 방향 처리
        @each $side in $sides {
            border-#{$side}: $width $style $color;
        }
    } @else { // 단일 방향 처리
        border-#{$sides}: $width $style $color;
    }
}

@mixin border-radius($radius) { 
    -webkit-border-radius: $radius; 
    -moz-border-radius: $radius; 
    border-radius: $radius;
}
// $max: 5;

// @mixin margin-classes {
//   @for $i from 0 through $max { 
//     $margin: $i * 5px !important;
//     .ma#{$i*5} {
//       margin: $margin;
//     }
//     .ml#{$i*5} {
//       margin-left: $margin;
//     }
//     .mr#{$i*5} {
//       margin-right: $margin;
//     }
//     .mt#{$i*5} {
//       margin-top: $margin;
//     }
//     .mb#{$i*5} {
//       margin-bottom: $margin;
//     }
//     .m-hz#{$i*5} {
//       margin-left: $margin;
//       margin-right: $margin;
//     }
//     .m-vt#{$i*5} {
//       margin-top: $margin;
//       margin-bottom: $margin;
//     }
//   }
// }

// @include margin-classes;

// @mixin padding-classes {
//   @for $i from 0 through $max {
//     $padding: $i * 5px !important;
//     .pa#{$i*5} {
//       padding: $padding;
//     }
//     .pl#{$i*5} {
//       padding-left: $padding;
//     }
//     .pr#{$i*5} {
//       padding-right: $padding;
//     }
//     .pt#{$i*5} {
//       padding-top: $padding;
//     }
//     .pb#{$i*5} {
//       padding-bottom: $padding;
//     }
//     .p-hz#{$i*5} {
//       padding-left: $padding;
//       padding-right: $padding;
//     }
//     .pvt#{$i*5} {
//       padding-top: $padding;
//       padding-bottom: $padding;
//     }
//   }
// }
//  @include padding-classes;
